
buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		// Dependencies on the GraphQL Plugin. Replace this version by the release you want to use.
		classpath group: "com.graphql-java-generator", name: 'graphql-gradle-plugin', version: "${project.version}"
		 
		// Spring Boot plugin
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'graphql-gradle-plugin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
	baseName = "${project.name}_springboot"
	version =  "${project.version}"
}

dependencies {

	// All the GraphQL dependencies (no dependencies for the GraphQL Gradle Plugin itself)
	compile "${project.group}:graphql-java-server-dependencies:${project.version}"

	// GraphiQL is an interface to test GraphQL (available at the URL /graphiql). Should not be deployed in production.
	// It will be discovered and exposed by Spring, just by being in the classpath 	
	runtimeOnly "com.graphql-java-kickstart:graphiql-spring-boot-starter:5.7.0"
	// This project needs also H2
	runtimeOnly "com.h2database:h2:1.4.199"
	
	// Use JUnit test framework
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.0'
	testRuntimeOnly 'org.apache.logging.log4j:log4j-jul:2.11.2'
}

// Let's configure the GraphQL Gradle Plugin
graphql {
	mode = "server"
	packageName = "com.graphql_java_generator.samples.forum.server"
	schemaPersonalizationFile = "src/main/graphql/forum_personalization.json"
}

// The next lines makes the GraphQL plugin be executed before Java compiles, so that all sources are generated on time
compileJava.dependsOn graphqlGenerateCode

// Thanks to https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
// Create a single Jar with all dependencies
//task fatJar(type: Jar) {
//	manifest {
//		attributes 'Implementation-Title': 'Gradle Jar File Example',
//		'Implementation-Version': version,
//		'Main-Class': 'com.graphqlplugin.server_mode.GraphQLServerMain'
//	}
//	baseName = project.name + '-all'
//	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//	with jar
//}
